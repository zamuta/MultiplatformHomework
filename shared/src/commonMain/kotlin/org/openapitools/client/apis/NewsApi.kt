/**
 * The News API
 *
 * ...
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import org.openapitools.client.models.NewsAllGet200Response
import org.openapitools.client.models.NewsInfo

import org.openapitools.client.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.client.features.json.serializer.KotlinxSerializer
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class NewsApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonSerializer: Json = ApiClient.JSON_DEFAULT
) : ApiClient(baseUrl, httpClientEngine, httpClientConfig, jsonSerializer) {

    /**
     * 
     * 
     * @param apiToken 
     * @param limit 
     * @param page 
     * @param search  (optional)
     * @param language  (optional)
     * @return NewsAllGet200Response
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun newsAllGet(apiToken: kotlin.String, limit: kotlin.Int, page: kotlin.Int, search: kotlin.String? = null, language: kotlin.String? = null): HttpResponse<NewsAllGet200Response> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        apiToken?.apply { localVariableQuery["api_token"] = listOf("$apiToken") }
        limit?.apply { localVariableQuery["limit"] = listOf("$limit") }
        page?.apply { localVariableQuery["page"] = listOf("$page") }
        search?.apply { localVariableQuery["search"] = listOf("$search") }
        language?.apply { localVariableQuery["language"] = listOf("$language") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/news/all",
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


    /**
     * 
     * 
     * @param uuid 
     * @param apiToken 
     * @return NewsInfo
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun newsByUUIDGet(uuid: kotlin.String, apiToken: kotlin.String): HttpResponse<NewsInfo> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        apiToken?.apply { localVariableQuery["api_token"] = listOf("$apiToken") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/news/uuid/{uuid}".replace("{" + "uuid" + "}", "$uuid"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }


}
